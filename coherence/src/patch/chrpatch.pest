//! CHRPatch Parsing Expression Grammar

// Primitives
num_silent = _{ ASCII_DIGIT+ }
number = { num_silent }
rest = { (!NEWLINE ~ ANY)* }

// Generic patch content
path = { !("/" | "-") ~ (!(NEWLINE | " >") ~ pathspec)+ }
pathspec = _{ "/"* ~ (ASCII_ALPHANUMERIC | "_" | "-" | ".")+ }

// Create patch content
// Result: [path, (content(rest)+, path)?]
create_patch = { create_patch_header ~ ((NEWLINE ~ create_patch_line)+ ~ NEWLINE ~ create_patch_header)? }
create_patch_line = _{ "+ " ~ rest }
create_patch_header = _{ "= create: " ~ path ~ " >" }

// Update patch content
// Result: [path, (Result<update_patch_push> | Result<update_patch_replace_chunk>)+, path]
update_patch = { update_patch_header ~ (NEWLINE ~ update_patch_line)+ ~ NEWLINE ~ create_patch_header }
update_patch_header = _{ "= update: " ~ path ~ " >" }
update_patch_line = _{ update_patch_push | update_patch_edit | update_patch_cut }
// Result: [line(number), content(rest)]
update_patch_push = { number ~ "+" ~ number ~ rest }
// Result: [line(number), new(rest), line(number), old(content)]
update_patch_edit = { number ~ " + " ~ rest ~ NEWLINE ~ number ~ " - " ~ rest }
// Result: [line(number), content(rest)]
update_patch_cut = { number ~ "-- " ~ rest }


// Delete patch content
// Result: [path, (content(rest)+, path)?]
delete_patch = { delete_patch_header ~ ((NEWLINE ~ delete_patch_line)+ ~ NEWLINE ~ delete_patch_header)? }
delete_patch_line = _{ "- " ~ rest }
delete_patch_header = _{ "= delete: " ~ path ~ " >" }

// Header contents
username = { (!" [" ~ (ASCII_ALPHANUMERIC | "_" | "-"))+ }
who = _{ (!"@" ~ ASCII_ALPHANUMERIC)+ }
at = _{ (!"]" ~ (ASCII_ALPHANUMERIC | "." | "_"))+ }
email = { who ~ "@" ~ at }
author = _{ username ~ " [" ~ email ~ "]" }
date = {
    (num_silent ~ "-" ~ num_silent ~ "-" ~ num_silent) // Date
    ~ "T"
    ~ (num_silent ~ ":" ~ num_silent ~ ":" ~ num_silent) // Time
    ~ "."
    ~ (num_silent) // Millis
    ~ "+"
    ~ (num_silent ~ ":" ~ num_silent) // Timezone
}
// 2023-05-09T10:12:51.505467+00:00

// Global
header = _{
    "author: " ~ author ~ NEWLINE
    ~ "date: " ~ date ~ NEWLINE
    ~ "message: " ~ rest ~ NEWLINE
}
// Result: [Result<create_patch> | Result<update_patch> | Result<delete_patch>]
patch = _{ create_patch | update_patch | delete_patch }
// Result: [username, email, date, message(rest), Result<patch>*]
file = { SOI ~ header ~ NEWLINE ~ (patch ~ NEWLINE)* ~ EOI }
